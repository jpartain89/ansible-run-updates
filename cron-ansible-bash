#!/bin/bash -e
# shellcheck disable=SC2024

# Script to run this playbook through cron on my RPI:
# It will attempt to auto-install/update Ansible through pip and then run the
# playbook.

# Copyright Â© 2018 JPCDI, JPartain89 and Justin Partain
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

exec 1> >(logger -s -t "$(basename "$0")") 2>&1

export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

PIP_BIN="$(command -v pip)"
ANS_PLAY="$(command -v ansible-playbook)"
GIT_AUTOPULL="$(command -v git-autopull)"
PIDFILE="${DIR}/ansible.pid"

trap 'rm $PIDFILE; exit 1' SIGHUP SIGINT SIGTERM

if [ -f "$PIDFILE" ]; then
    PID=$(cat "${PIDFILE}")
    if ps -p "$PID" > /dev/null 2>&1; then
        echo "Job is already running"
        exit 1
    else
        ## Process not found assume not running
        if echo $$ > "$PIDFILE" == 1; then
            echo "Could not create PID file"
            exit 1
        fi
    fi
else
    if echo $$ > "$PIDFILE" == 1; then
        echo "Could not create PID file"
        exit 1
    fi
fi

# First, we will install/update ansible using pip
sudo -H "${PIP_BIN}" install --upgrade ansible 2>&1 || \
    echo "For some reason, the installation/upgrade of Ansible failed!"; exit 1

# Next, we pull down any git updates.
git -C "${DIR}" pull 2>&1;
cd "${DIR}" && "$GIT_AUTOPULL" &&
"${ANS_PLAY}" "${DIR}/main.yml" 2>&1 &&
rm "$PIDFILE"
